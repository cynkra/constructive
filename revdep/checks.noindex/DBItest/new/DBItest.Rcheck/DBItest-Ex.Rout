
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "DBItest"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('DBItest')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("context")
> ### * context
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: make_context
> ### Title: Test contexts
> ### Aliases: make_context set_default_context get_default_context
> 
> ### ** Examples
> 
> ## Don't show: 
> if (requireNamespace("RSQLite", quietly = TRUE)) withAutoprint({ # examplesIf
+ ## End(Don't show)
+ make_context(
+   new(
+     "DBIConnector",
+     .drv = RSQLite::SQLite(),
+     .conn_args = list(dbname = tempfile("DBItest", fileext = ".sqlite"))
+   ),
+   tweaks = tweaks(
+     constructor_relax_args = TRUE,
+     placeholder_pattern = c("?", "$1", "$name", ":name"),
+     date_cast = function(x) paste0("'", x, "'"),
+     time_cast = function(x) paste0("'", x, "'"),
+     timestamp_cast = function(x) paste0("'", x, "'"),
+     logical_return = function(x) as.integer(x),
+     date_typed = FALSE,
+     time_typed = FALSE,
+     timestamp_typed = FALSE
+   ),
+   default_skip = c("roundtrip_date", "roundtrip_timestamp")
+ )
+ ## Don't show: 
+ }) # examplesIf
> make_context(new("DBIConnector", .drv = RSQLite::SQLite(), .conn_args = list(dbname = tempfile("DBItest", 
+     fileext = ".sqlite"))), tweaks = tweaks(constructor_relax_args = TRUE, placeholder_pattern = c("?", 
+     "$1", "$name", ":name"), date_cast = function(x) paste0("'", x, "'"), time_cast = function(x) paste0("'", 
+     x, "'"), timestamp_cast = function(x) paste0("'", x, "'"), logical_return = function(x) as.integer(x), 
+     date_typed = FALSE, time_typed = FALSE, timestamp_typed = FALSE), default_skip = c("roundtrip_date", 
+     "roundtrip_timestamp"))
$cnr
<DBIConnector><SQLiteDriver>
Arguments:
$dbname
[1] "/var/folders/mp/qvg2y_jx63bgk_s0xxh2zr140000gp/T//RtmpHTw7Ag/DBItest16e334997e99e.sqlite"


$drv
<SQLiteDriver>

$tweaks
DBItest tweaks:
  constructor_relax_args: TRUE
  strict_identifier: FALSE
  omit_blob_tests: FALSE
  current_needs_parens: FALSE
  union: function (x) 
  placeholder_pattern: ?    
  logical_return: function (x) 
  date_cast: function (x) 
  time_cast: function (x) 
  timestamp_cast: function (x) 
  blob_cast: function (x) 
  date_typed: FALSE
  time_typed: FALSE
  timestamp_typed: FALSE
  temporary_tables: TRUE
  list_temporary_tables: TRUE
  allow_na_rows_affected: FALSE
  is_null_check: function (x) 
  create_table_as: function (table_name, query) 
  dbitest_version: 1.7.1

$name
NULL

$default_skip
[1] "roundtrip_date"      "roundtrip_timestamp"

attr(,"class")
[1] "DBItest_context"
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("make_placeholder_fun")
> ### * make_placeholder_fun
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: make_placeholder_fun
> ### Title: Create a function that creates n placeholders
> ### Aliases: make_placeholder_fun
> ### Keywords: internal
> 
> ### ** Examples
> 
> body(DBItest:::make_placeholder_fun("?"))
rep("?", n)
> DBItest:::make_placeholder_fun("?")(2)
[1] "?" "?"
> DBItest:::make_placeholder_fun("$1")(3)
[1] "$1" "$2" "$3"
> DBItest:::make_placeholder_fun(":name")(5)
   a    b    c    d    e 
":a" ":b" ":c" ":d" ":e" 
> 
> 
> 
> cleanEx()
> nameEx("tweaks")
> ### * tweaks
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tweaks
> ### Title: Tweaks for DBI tests
> ### Aliases: tweaks
> 
> ### ** Examples
> 
> ## Not run: 
> ##D make_context(..., tweaks = tweaks(strict_identifier = TRUE))
> ## End(Not run)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.292 0.021 0.325 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
